// to control some job configuration
process {

  shell =  ['/bin/bash','-o','pipefail']

  cpus = { check_max( 1 * task.attempt, 'cpus' ) }
  memory = { check_max( 7.GB * task.attempt, 'memory' ) }
  time = { check_max( 6.h * task.attempt, 'time' ) }

  errorStrategy = { task.exitStatus in [143,137,104,134,139] ? 'retry' : 'finish' }
  maxRetries = 1
  maxErrors = '-1'
  // 1 cpu and 5Gb RAM
  withLabel:load_low1 {
    cpus = { check_max( 1 * task.attempt, 'cpus' ) }
    memory = { check_max( 5.GB * task.attempt, 'memory' ) }
    time = { check_max( 12.h * task.attempt, 'time' ) }
  }
  //2 cpus 14Gb
  withLabel:load_low {
    cpus = { check_max( 2 * task.attempt, 'cpus' ) }
    memory = { check_max( 14.GB * task.attempt, 'memory' ) }
    time = { check_max( 6.h * task.attempt, 'time' ) }
  }
  //4 cpus 20Gb
  withLabel:load_low2 {
    cpus = { check_max( 4 * task.attempt, 'cpus' ) }
    memory = { check_max( 20.GB * task.attempt, 'memory' ) }
    time = { check_max( 6.h * task.attempt, 'time' ) }
  }
  //1 cpu 30Gb
  withLabel:load_1cpu30gb {
    cpus = { check_max( 1 * task.attempt, 'cpus' ) }
    memory = { check_max( 30.GB * task.attempt, 'memory' ) }
    time = { check_max( 6.h * task.attempt, 'time' ) }
  }

  // 4 cpus 42 Gb
  withLabel:load_medium {
    cpus = { check_max( 4 * task.attempt, 'cpus' ) }
    memory = { check_max( 42.GB * task.attempt, 'memory' ) }
    time = { check_max( 12.h * task.attempt, 'time' ) }
  }
  // 12 cpus  84Gb
  withLabel:load_high {
    cpus = { check_max( 12 * task.attempt, 'cpus' ) }
    memory = { check_max( 84.GB * task.attempt, 'memory' ) }
    time = { check_max( 24.h * task.attempt, 'time' ) }
  }

}
